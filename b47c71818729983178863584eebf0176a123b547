{
  "comments": [
    {
      "key": {
        "uuid": "da33351e_2ad8c352",
        "filename": "docs/testing/developer/testscope/index.rst",
        "patchSetId": 2
      },
      "lineNbr": 552,
      "author": {
        "id": 150
      },
      "writtenOn": "2017-07-31T23:53:07Z",
      "side": 1,
      "message": "Should some of the test cases be mandatory ?",
      "revId": "b47c71818729983178863584eebf0176a123b547",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_ca1f9708",
        "filename": "docs/testing/developer/testscope/index.rst",
        "patchSetId": 2
      },
      "lineNbr": 576,
      "author": {
        "id": 6701
      },
      "writtenOn": "2017-07-31T23:15:44Z",
      "side": 1,
      "message": "This particular test case is not really applicable in the DVR (Distributed Virtual Router) deployments and in the deployments with OpenDaylight. So should we include this test case?",
      "range": {
        "startLine": 576,
        "startChar": 62,
        "endLine": 576,
        "endChar": 86
      },
      "revId": "b47c71818729983178863584eebf0176a123b547",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_d540dc37",
        "filename": "docs/testing/developer/testscope/index.rst",
        "patchSetId": 2
      },
      "lineNbr": 576,
      "author": {
        "id": 5469
      },
      "writtenOn": "2017-08-01T03:42:34Z",
      "side": 1,
      "message": "Since this test case has so many restrictions about the deployment, it may be removed.",
      "parentUuid": "da33351e_ca1f9708",
      "range": {
        "startLine": 576,
        "startChar": 62,
        "endLine": 576,
        "endChar": 86
      },
      "revId": "b47c71818729983178863584eebf0176a123b547",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_aa1cd314",
        "filename": "docs/testing/developer/testscope/index.rst",
        "patchSetId": 2
      },
      "lineNbr": 577,
      "author": {
        "id": 6701
      },
      "writtenOn": "2017-07-31T23:15:44Z",
      "side": 1,
      "message": "Do we verify any dynamic network operation in this test case? I think this test case verifies that subnet\u0027s extra configuration (like DNS and extra-route) details are passed on to VMs through DHCP/metadta during the boot-time.",
      "range": {
        "startLine": 577,
        "startChar": 62,
        "endLine": 577,
        "endChar": 81
      },
      "revId": "b47c71818729983178863584eebf0176a123b547",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_f519a07a",
        "filename": "docs/testing/developer/testscope/index.rst",
        "patchSetId": 2
      },
      "lineNbr": 577,
      "author": {
        "id": 5469
      },
      "writtenOn": "2017-08-01T03:42:34Z",
      "side": 1,
      "message": "This test case will set a initial dns nameserver when creating the subnet.\nThen it will update the subnet\u0027s dns nameserver to another one.\nCan we treat this as a dynamic network operation?",
      "parentUuid": "da33351e_aa1cd314",
      "range": {
        "startLine": 577,
        "startChar": 62,
        "endLine": 577,
        "endChar": 81
      },
      "revId": "b47c71818729983178863584eebf0176a123b547",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_0a1a1f17",
        "filename": "docs/testing/developer/testscope/index.rst",
        "patchSetId": 2
      },
      "lineNbr": 597,
      "author": {
        "id": 6701
      },
      "writtenOn": "2017-07-31T23:15:44Z",
      "side": 1,
      "message": "There are few tests in API category covering this functionality like: compute.admin.test_live_migration.py \u0026 compute.admin.test_migrations.py",
      "revId": "b47c71818729983178863584eebf0176a123b547",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_3552e813",
        "filename": "docs/testing/developer/testscope/index.rst",
        "patchSetId": 2
      },
      "lineNbr": 597,
      "author": {
        "id": 5469
      },
      "writtenOn": "2017-08-01T03:42:34Z",
      "side": 1,
      "message": "Thanks for your reminder.\nI will go to check the compute API test cases and pick out the ones associated with this capability.",
      "parentUuid": "da33351e_0a1a1f17",
      "revId": "b47c71818729983178863584eebf0176a123b547",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_eab53b32",
        "filename": "docs/testing/user/testspecification/securitygroup/index.rst",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 6701
      },
      "writtenOn": "2017-07-31T23:15:44Z",
      "side": 1,
      "message": "I think the tempest test case creates a security group with some default ALLOW rules for SSH and ICMP traffic in the _create_security_group() method.\n\nSo it won\u0027t be an empty security group",
      "range": {
        "startLine": 127,
        "startChar": 27,
        "endLine": 127,
        "endChar": 32
      },
      "revId": "b47c71818729983178863584eebf0176a123b547",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_4ad38738",
        "filename": "docs/testing/user/testspecification/securitygroup/index.rst",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 150
      },
      "writtenOn": "2017-07-31T23:53:07Z",
      "side": 1,
      "message": "Maybe \"empty (i.e. default)\"?",
      "parentUuid": "da33351e_eab53b32",
      "range": {
        "startLine": 127,
        "startChar": 27,
        "endLine": 127,
        "endChar": 32
      },
      "revId": "b47c71818729983178863584eebf0176a123b547",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_f5688089",
        "filename": "docs/testing/user/testspecification/securitygroup/index.rst",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 5469
      },
      "writtenOn": "2017-08-01T03:42:34Z",
      "side": 1,
      "message": "Yes, the security group here is not empty.\nThe method _create_security_group() will add the rules:\n1. egress and ingress tcp port 22 allow rule in order to allow ssh access for ipv4.\n2. egress and ingress ipv6 icmp allow rule, in order to allow icmpv6.\n3. egress and ingress ipv4 icmp allow rule, in order to allow icmpv4.",
      "parentUuid": "da33351e_eab53b32",
      "range": {
        "startLine": 127,
        "startChar": 27,
        "endLine": 127,
        "endChar": 32
      },
      "revId": "b47c71818729983178863584eebf0176a123b547",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_0a905f94",
        "filename": "docs/testing/user/testspecification/securitygroup/index.rst",
        "patchSetId": 2
      },
      "lineNbr": 150,
      "author": {
        "id": 6701
      },
      "writtenOn": "2017-07-31T23:15:44Z",
      "side": 1,
      "message": "For easier understanding, you can also specify as \"successful\" in parentheses",
      "range": {
        "startLine": 150,
        "startChar": 61,
        "endLine": 150,
        "endChar": 65
      },
      "revId": "b47c71818729983178863584eebf0176a123b547",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_4ae9c719",
        "filename": "docs/testing/user/testspecification/securitygroup/index.rst",
        "patchSetId": 2
      },
      "lineNbr": 165,
      "author": {
        "id": 6701
      },
      "writtenOn": "2017-07-31T23:15:44Z",
      "side": 1,
      "message": "you can specify as \"Failed\" for easier understanding",
      "range": {
        "startLine": 165,
        "startChar": 61,
        "endLine": 165,
        "endChar": 69
      },
      "revId": "b47c71818729983178863584eebf0176a123b547",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_8a262f67",
        "filename": "docs/testing/user/testspecification/securitygroup/index.rst",
        "patchSetId": 2
      },
      "lineNbr": 172,
      "author": {
        "id": 6701
      },
      "writtenOn": "2017-07-31T23:15:44Z",
      "side": 1,
      "message": "Just my thought, others can comment, should we give here a simplified version of test case steps instead of explaining each and every action and assertion. For ex.\n\n1. Create a server VM1 with security-group SG1, neutron network net1 and floating-ip fip1 (via Router R1).\n2. SG1 has rules for allowing incoming SSH and ICMP traffic\n3. Create a second neutron network net2 and attach VM1 to net2\n4. Get the VM1\u0027s MAC address and ethernet interface NIC2 for net2\n5. Create second server VM2 on the net2\n6. Verify VM1 is able to communicate with VM2 via NIC2\n7. Login to VM1 and spoof the MAC address of NIC2 to \"00:00:00:00:00:01\" and verify it was set\n8. Verify VM1 fails to communicate with VM2 via NIC2\n9. Update \u0027port_security_enable\u0027 to be False for the VM1\u0027s NIC2 port\n10. Verify now VM1 is able to communicate with VM2 via NIC2",
      "revId": "b47c71818729983178863584eebf0176a123b547",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_8add8f45",
        "filename": "docs/testing/user/testspecification/securitygroup/index.rst",
        "patchSetId": 2
      },
      "lineNbr": 172,
      "author": {
        "id": 150
      },
      "writtenOn": "2017-07-31T23:53:07Z",
      "side": 1,
      "message": "I support that we could reduce the workload and improve readability by summarizing some of the details out. We\u0027ve said that all existing openstack test cases may only need a summary.",
      "parentUuid": "da33351e_8a262f67",
      "revId": "b47c71818729983178863584eebf0176a123b547",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_552ccc4a",
        "filename": "docs/testing/user/testspecification/securitygroup/index.rst",
        "patchSetId": 2
      },
      "lineNbr": 172,
      "author": {
        "id": 5469
      },
      "writtenOn": "2017-08-01T03:42:34Z",
      "side": 1,
      "message": "Thanks for the suggestion. I will refine the test steps in the next patch set.",
      "parentUuid": "da33351e_8add8f45",
      "revId": "b47c71818729983178863584eebf0176a123b547",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_6a2beb30",
        "filename": "docs/testing/user/testspecification/securitygroup/index.rst",
        "patchSetId": 2
      },
      "lineNbr": 273,
      "author": {
        "id": 6701
      },
      "writtenOn": "2017-07-31T23:15:44Z",
      "side": 1,
      "message": "This step consists of two validations:\n\n- With ingress ICMP security group rule enabled only at tenant1, the server in tenant2 can ping server in tenant1 but not the reverse direction\n\n- With ingress ICMP security group rule enabled at tenant2 also, the ping works from both directions",
      "range": {
        "startLine": 272,
        "startChar": 2,
        "endLine": 273,
        "endChar": 57
      },
      "revId": "b47c71818729983178863584eebf0176a123b547",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_353148a3",
        "filename": "docs/testing/user/testspecification/securitygroup/index.rst",
        "patchSetId": 2
      },
      "lineNbr": 273,
      "author": {
        "id": 5469
      },
      "writtenOn": "2017-08-01T03:42:34Z",
      "side": 1,
      "message": "Yes, it will be more clear and accurate.",
      "parentUuid": "da33351e_6a2beb30",
      "range": {
        "startLine": 272,
        "startChar": 2,
        "endLine": 273,
        "endChar": 57
      },
      "revId": "b47c71818729983178863584eebf0176a123b547",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}