{
  "comments": [
    {
      "key": {
        "uuid": "dad5f5cf_9dbb26c4",
        "filename": "dovetail/container.py",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 4609
      },
      "writtenOn": "2016-10-13T08:04:23Z",
      "side": 1,
      "message": "It does not only introduce new environment variables also removes previous environments (i.e. dovetail_config[type][\u0027envs\u0027]).\n\nCan we \u0027add\u0027 new environment into original one?",
      "revId": "a508b8c4c29381587bf3518e694a113a675a8311",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_3d3b1aed",
        "filename": "dovetail/container.py",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 2667
      },
      "writtenOn": "2016-10-14T07:29:57Z",
      "side": 1,
      "message": "this will not replace dovetail_config[type][\u0027envs\u0027] with new \u0027envs\u0027, instead dovetail_config[type][\u0027envs\u0027] is always there after reading from config files like functest_config.yml and yardstick_config.yml, you can call it if needed; the problem I see is that dovetail_config[type][\u0027envs\u0027] is hard-coded to specified values which is not suitable for multi-SUT deployment, so I\u0027d like to assign new values to envs var.",
      "parentUuid": "dad5f5cf_9dbb26c4",
      "revId": "a508b8c4c29381587bf3518e694a113a675a8311",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}